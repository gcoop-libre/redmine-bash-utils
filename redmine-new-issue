#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2016 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090

DIR_BIN="$(dirname "$0")" && source "$DIR_BIN/redmine-common"

function usage()
{
cat << EOF
Usage:

\`\`\`bash

  $BIN SUBJECT [DESCRIPTION]

\`\`\`

Create new issue and return issue id.

Example:

\`\`\`bash

  $BIN 'test subject' 'test description'

  1234

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

if [[ ! -t 0 ]]
then
  TMPI="$(mktemp)"

  true > "$TMPI"

  while IFS= read -r PIPED_INPUT
  do
    echo "$PIPED_INPUT" >> "$TMPI"
  done

fi

if [[ -e "$TMPI" ]]
then
  SUBJECT="$(clean_subject "$(head -1 "$TMPI")")"
else
  SUBJECT="$(clean_subject "$1")"
fi

[[ -z "$SUBJECT" ]] && die "empty SUBJECT"

# load default variables
[[ ! -z "$DEFAULT_PRIORITY_ID" ]]    && PRIORITY_ID="$DEFAULT_PRIORITY_ID"
[[ ! -z "$DEFAULT_PROJECT_ID" ]]     && PROJECT_ID="$DEFAULT_PROJECT_ID"
[[ ! -z "$DEFAULT_ASSIGNED_TO_ID" ]] && ASSIGNED_TO_ID="$DEFAULT_ASSIGNED_TO_ID"
[[ ! -z "$DEFAULT_CATEGORY_ID" ]]    && CATEGORY_ID="$DEFAULT_CATEGORY_ID"
[[ ! -z "$DEFAULT_STATUS_ID" ]]      && STATUS_ID="$DEFAULT_STATUS_ID"
[[ ! -z "$DEFAULT_TRACKER_ID" ]]     && TRACKER_ID="$DEFAULT_TRACKER_ID"

# enviroment variables overwrite default variables
[[ ! -z "$REDMINE_ASSIGNED_TO_ID" ]] && ASSIGNED_TO_ID="$REDMINE_ASSIGNED_TO_ID"
[[ ! -z "$REDMINE_CATEGORY_ID" ]]    && CATEGORY_ID="$REDMINE_CATEGORY_ID"
[[ ! -z "$REDMINE_PARENT_ID" ]]      && PARENT_ID="$REDMINE_PARENT_ID"
[[ ! -z "$REDMINE_PRIORITY_ID" ]]    && PRIORITY_ID="$REDMINE_PRIORITY_ID"
[[ ! -z "$REDMINE_PROJECT_ID" ]]     && PROJECT_ID="$REDMINE_PROJECT_ID"
[[ ! -z "$REDMINE_STATUS_ID" ]]      && STATUS_ID="$REDMINE_STATUS_ID"
[[ ! -z "$REDMINE_TRACKER_ID" ]]     && TRACKER_ID="$REDMINE_TRACKER_ID"

if [ -z "$2" ]
then
  DESCRIPTION=''
else
  DESCRIPTION=$(
  echo "$2" \
    | tr '"' "'" \
    | sed 's/\x1B\[[0-9;]*[JKmsu]//g' \
    | sed ':a;N;$!ba;s/\n/\\n/g'
  )
fi

# argument variables overwrite enviroment variables
[[ ! -z "$3" ]] && PRIORITY_ID="$3"

# allow username or user_id
if [ ! -z "$4" ]
then
  VALID_USER_ID=$(echo "$4" | egrep "^[0-9]+$")
  if [ "$VALID_USER_ID" = "$4" ]
  then
    ASSIGNED_TO_ID="$4"
  else
    U=$(echo "$4" | tr '[:lower:]' '[:upper:]')
    ID=$(egrep "^($U):" "$CONFIG" | cut -d: -f2 | egrep -o "[0-9]+")
    [[ -z "$ID" ]] && die "invalid USERNAME"
    ASSIGNED_TO_ID="$ID"
  fi
fi

[[ ! -z "$5" ]] && PARENT_ID="$5"
[[ ! -z "$6" ]] && PROJECT_ID="$6"

[[ "$PRIORITY_ID" -lt "$PRIORITY_MIN_ID" ]] && die "invalid PRIORITY_ID"
[[ "$PRIORITY_ID" -gt "$PRIORITY_MAX_ID" ]] && die "invalid PRIORITY_ID"

[[ ! "$PROJECT_ID" =~ "$NUMBER" ]] && die "invalid PROJECT_ID"

JSON_FILE='/tmp/new.json'

if [ -z "$PARENT_ID" ]
then
JSON=$(cat << EOF
{
    "issue": {
      "project_id": $PROJECT_ID,
      "subject": "$SUBJECT",
      "priority_id": $PRIORITY_ID,
      "assigned_to_id": $ASSIGNED_TO_ID,
      "status_id": $STATUS_ID,
      "tracker_id": $TRACKER_ID,
			"category_id": $CATEGORY_ID,
      "description": "$DESCRIPTION"
    }
}
EOF
)
else
JSON=$(cat << EOF
{
    "issue": {
      "project_id": $PROJECT_ID,
      "subject": "$SUBJECT",
      "priority_id": $PRIORITY_ID,
      "assigned_to_id": $ASSIGNED_TO_ID,
      "status_id": $STATUS_ID,
      "tracker_id": $TRACKER_ID,
      "parent_issue_id": $PARENT_ID,
			"category_id": $CATEGORY_ID,
      "description": "$DESCRIPTION"
    }
}
EOF
)
fi

echo "$JSON" > "$JSON_FILE"

H1='"Content-Type: application/json"'
H2='"X-Redmine-API-Key: '$API_KEY'"'
URL="$API_URL/issues.json"

CURL_PROXY=''
[[ ! -z "$REDMINE_PROXY_SOCKS" ]] && CURL_PROXY="--socks5 $REDMINE_PROXY_SOCKS"

echo curl $CURL_PROXY -s -k -H "$H1" -X POST --data "@$JSON_FILE" -H "$H2" "$URL" \
    | bash \
    | python -mjson.tool \
    | egrep '"id"' \
    | tr -d ',"' \
    | sed 's/^ \+//g' \
    | awk '{print $2}' \
    | sort -nr \
    | head -1
